<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="board">
	 <!-- 게시글 전체 목록 조회 (검색) -->
	 <select id="listAll" resultType="com.hatsnake.spring02.domain.BoardDTO">
	 	<include refid="pagingHeader"></include>
	 	select rownum, bno, title, content, writer, regdate, viewcnt,
	 	(select count(*) from reply where bno=b.bno) as recnt, show, c.categoryname as categoryname
	 	from board b join category c on b.categoryid = c.categoryid
	 	<!-- WHERE절을 include 태그로 삽입 -->
	 	<include refid="search"></include>
	 	order by bno desc, regdate desc
	 	<include refid="pagingFooter"></include>
	 </select>
	 
	 <select id="listLimit" resultType="com.hatsnake.spring02.domain.BoardDTO">
		<![CDATA[
		select * from (
			select rownum, bno, title, content, writer, regdate, viewcnt,
			(select count(*) from reply where bno=b.bno) as recnt, show, c.categoryname as categoryname
			from board b join category c on b.categoryid = c.categoryid 
			order by bno desc, regdate desc 
		) where rownum <= 10
		]]>
	 </select>
	 
	 <!-- 게시글 레코드 갯수 -->
	 <select id="countArticle" resultType="int">
	 	select count(*) from board
	 	<include refid="search"></include>
	 </select>
	 
	 <!-- search(where절) mybatis include -->
	 <sql id="search">
	 	<choose>
	 		<!-- 검색옵션이 전체 검색일 경우 -->
	 		<when test="searchOption == 'all'">
	 			where writer like '%'||#{keyword}||'%'
	 			or content like '%'||#{keyword}||'%'
	 			or title like '%'||#{keyword}||'%'
	 		</when>
	 		<!-- 전체 검색이 아닐 경우 -->
	 		<otherwise>
	 			where ${searchOption} like '%'||#{keyword}||'%'
	 		</otherwise>
	 	</choose>
	 </sql>
	 
	 <!-- 페이징 sql -->
	 <sql id="pagingHeader">
	 	select * from (
	 		select rownum as rn, a.* from(
	 </sql>
	 <sql id="pagingFooter">
	 		) a
	 	) where rn between #{start} and #{end}
	 </sql>
	 
	 <!-- 게시글 작성 -->
	 <insert id="insert">
	 	insert into board (bno, title, content, writer, show, categoryid) 
	 	values (seq_board.NEXTVAL, #{title}, #{content}, #{writer}, 'y', #{categoryid})
	 </insert>
	 
	 <!-- 게시글 첨부파일 목록 -->
	 <select id="getAttach" resultType="string">
	 	select * from attach_board where bno = #{bno}
	 </select>
	 
	 <!-- 게시글 첨부파일 추가 -->
	 <insert id="addAttach">
	 	insert into attach_board (fullname, bno)
	 	values (#{fullname}, seq_board.CURRVAL)
	 </insert>
	 
	 <!-- 게시글 첨부파일 업데이트처리(입력처리) -->
	 <insert id="updateAttach">
	 	insert into attach_board (fullname, bno)
	 	values (#{fullname}, #{bno})
	 </insert>
	 
	 <!-- 게시글 첨부파일 삭제처리 -->
	 <delete id="deleteAttach">
	 	delete from attach_board where fullname = #{fullname}
	 </delete>
	
	 <!-- 게시글 상세보기 조회 -->
	 <select id="view" resultType="com.hatsnake.spring02.domain.BoardDTO">
	 	 select bno, title, content, b.regdate, writer, viewcnt, name, 
	 	 show, likecnt, c.categoryname as categoryname
	 	 from board b, users u, category c
	 	 where b.writer = u.userid and b.categoryid = c.categoryid
	 	 and bno = #{bno}
	 </select>
	 
	 <!-- 게시글 조회수 증가 처리 -->
	 <update id="increaseViewcnt">
	 	update board set viewcnt = viewcnt + 1
	 	where bno = #{bno}
	 </update>
	 
	 <!-- 게시글 수정 처리 -->
	 <update id="updateArticle">
	 	update board set 
	 	title = #{title}, content = #{content}, categoryid = #{categoryid}
	 	where bno = #{bno}
	 </update>
	 
	 <!-- 게시글 삭제 처리 -->
	 <update id="deleteArticle">
	 	update board set show = 'n'
	 	where bno = #{bno}
	 </update>
	 
	 <!-- 좋아요 있는지 체크 -->
	 <select id="likeCheck" resultType="map">
		select like_check from tb_like
		where bno = #{bno}
		and userid = #{userid}
	 </select>
	 
	 <!-- 좋아요 추가 -->
	 <insert id="insertLikeBtn">
		insert into tb_like 
		values(seq_like.NEXTVAL, #{bno}, #{userid}, 1)
	 </insert>

	 <!-- 좋아요 갯수 +1 -->
	 <update id="updateLikeCntPlus">
	 	update board set likecnt = likecnt+1 
	 	where bno = #{bno}
	 </update>

	 <!-- 좋아요 갯수 -1 -->
	 <update id="updateLikeCntMinus">
	 	update board set likecnt = likecnt-1 
	 	where bno = #{bno}
	 </update>
	 
	 <!-- 사용자 체크여부 -->
	 <update id="updateLikeBtn">
	 	update tb_like set like_check = #{likeCheck}
	 	where bno = #{bno}
	 	and userid = #{userid}
	 </update>
	 
	 <!-- 좋아요 여부 -->
	 <select id="getLikeCnt" resultType="int">
	 	select likecnt from board
	 	where bno = #{bno}
	 </select>
	 
	 <!-- 게시글 좋아요 있는지 체크 -->
	 <select id="likeCheckByMap" resultType="map">
		select like_check from tb_like
		where userid = #{userid}
		and bno = #{bno}
	 </select>
	 
	 <!-- 게시글 좋아요 여부 -->
	 <select id="getLikeCntByBno" resultType="int">
	 	select likecnt from board
	 	where bno = #{bno}
	 </select>
	 
	 <select id="getCategoryList" resultType="com.hatsnake.spring02.domain.CategoryDTO">
	 	select * from category
	 </select>
	 
 </mapper>