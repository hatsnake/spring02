<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="reply">
 	<!-- 댓글 입력 -->
 	<insert id="insertReply">
 		insert into reply (rno, bno, replytext, replyer, regdate, updatedate, secretReply, writer)
 		values (reply_seq.nextval, #{bno, jdbcType=VARCHAR}, #{replytext, jdbcType=VARCHAR}, #{replyer, jdbcType=VARCHAR}, sysdate, sysdate, #{secretReply, jdbcType=VARCHAR}, #{writer, jdbcType=VARCHAR})
 	</insert>
 	
 	<!-- 댓글 목록 -->
 	<select id="listReply" resultType="com.hatsnake.spring02.domain.ReplyDTO">
 		<!--  
 		select rno, bno, replytext, replyer, regdate, updatedate
 		from reply r, users u
 		where r.replyer = u.userid and bno=#{bno}
 		order by rno
 		-->
 		<include refid="pagingHeader"/>
 		select r.rno, bno, r.replytext, r.replyer, r.secretReply as secretReply, r.regdate, r.updatedate,
 		(select writer from board where bno = r.bno) as writer
 		from reply r, users u
 		where r.replyer = u.userid and bno = #{bno}
 		order by rno desc
 		<include refid="pagingFooter"/>
 	</select>
 	
 	<!-- 페이징 sql -->
 	<sql id="pagingHeader">
 		select * from (
 			select rownum as rn, a.* from(
 	</sql>
 	<sql id="pagingFooter">
 			) a
 		) where rn between #{start} and #{end}
 	</sql>
 	
 	<!-- 댓글 상세보기 -->
 	<select id="detailReply" resultType="com.hatsnake.spring02.domain.ReplyDTO">
 		select rno, bno, replytext, replyer, regdate, updatedate, secretReply
 		from reply where rno = #{rno}
 	</select>
 	
 	<!-- 댓글 수정 -->
 	<select id="updateReply">
 		update reply
 		set replytext = #{replytext}
 		where rno = #{rno}
 	</select>
 	
 	<!-- 댓글 삭제 -->
 	<delete id="deleteReply">
 		delete from reply
 		where rno = #{rno}
 	</delete>
 	
 	<!-- 댓글 갯수(페이징처리) -->
 	<select id="countReply" resultType="int">
 		select count(*) from reply where bno = #{bno}
 	</select>
 	
 </mapper>